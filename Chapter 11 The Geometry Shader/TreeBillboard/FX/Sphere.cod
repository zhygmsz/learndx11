//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLights[3];     // Offset:    0, size:  192
    float3  gEyePosW;                   // Offset:  192, size:   12
    float   gFogStart;                  // Offset:  204, size:    4
    float   gFogRange;                  // Offset:  208, size:    4
    float4  gFogColor;                  // Offset:  224, size:   16
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProj;            // Offset:   64, size:   64
    Material gMaterial;                 // Offset:  128, size:   64
}

//
// 1 local object(s)
//
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 3 technique(s)
    //
    technique11 Light3
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_temps 3
                
                #line 64 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r1.xyz, v1.xyzx  // vout<3,4,5>
                mov r2.xy, v2.xyxx  // vout<6,7>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o1.xyz, r1.xyzx  // VS<3,4,5>
                mov o2.xy, r2.xyxx  // VS<6,7>
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  128
                //       float4 Diffuse;                // Offset:  144
                //       float4 Specular;               // Offset:  160
                //       float4 Reflect;                // Offset:  176
                //
                //   } gMaterial;                       // Offset:  128 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           4   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v[3][0].xyz
                dcl_input v[3][1].xyz
                dcl_input v[3][2].xy
                dcl_temps 15
                dcl_indexableTemp x0[30], 4
                dcl_inputprimitive triangle 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 24
                
                #line 80 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                add r0.xyz, v[1][0].xyzx, v[0][0].xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r1.xyz, v[2][0].xyzx, v[1][0].xyzx
                mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r2.xyz, v[0][0].xyzx, v[2][0].xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                
                #line 85
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                dp3 r2.w, r2.xyzx, r2.xyzx
                rsq r2.w, r2.w
                mul r2.xyz, r2.wwww, r2.xyzx
                
                #line 90
                add r3.xyz, v[1][1].xyzx, v[0][1].xyzx
                mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r4.xyz, v[2][1].xyzx, v[1][1].xyzx
                mul r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r5.xyz, v[0][1].xyzx, v[2][1].xyzx
                mul r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r6.xy, v[1][2].xyxx, v[0][2].xyxx
                mul r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r6.zw, v[2][2].xxxy, v[1][2].xxxy
                mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r7.xy, v[0][2].xyxx, v[2][2].xyxx
                mul r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                
                #line 110
                mov r8.xyz, v[0][0].xyzx
                mov r8.w, l(1.000000)
                dp4 r3.w, r8.xyzw, cb0[0].xyzw
                dp4 r4.w, r8.xyzw, cb0[1].xyzw
                dp4 r5.w, r8.xyzw, cb0[2].xyzw
                dp4 r7.z, r8.xyzw, cb0[4].xyzw
                dp4 r7.w, r8.xyzw, cb0[5].xyzw
                dp4 r9.x, r8.xyzw, cb0[6].xyzw
                dp4 r8.x, r8.xyzw, cb0[7].xyzw
                mov r0.w, l(1.000000)
                dp4 r8.y, r0.xyzw, cb0[0].xyzw
                dp4 r8.z, r0.xyzw, cb0[1].xyzw
                dp4 r8.w, r0.xyzw, cb0[2].xyzw
                dp4 r9.y, r0.xyzw, cb0[4].xyzw
                dp4 r9.z, r0.xyzw, cb0[5].xyzw
                dp4 r9.w, r0.xyzw, cb0[6].xyzw
                dp4 r0.x, r0.xyzw, cb0[7].xyzw
                mov r2.w, l(1.000000)
                dp4 r0.y, r2.xyzw, cb0[0].xyzw
                dp4 r0.z, r2.xyzw, cb0[1].xyzw
                dp4 r0.w, r2.xyzw, cb0[2].xyzw
                dp4 r10.x, r2.xyzw, cb0[4].xyzw
                dp4 r10.y, r2.xyzw, cb0[5].xyzw
                dp4 r10.z, r2.xyzw, cb0[6].xyzw
                dp4 r2.x, r2.xyzw, cb0[7].xyzw
                mov r1.w, l(1.000000)
                dp4 r2.y, r1.xyzw, cb0[0].xyzw
                dp4 r2.z, r1.xyzw, cb0[1].xyzw
                dp4 r2.w, r1.xyzw, cb0[2].xyzw
                dp4 r10.w, r1.xyzw, cb0[4].xyzw
                dp4 r11.x, r1.xyzw, cb0[5].xyzw
                dp4 r11.y, r1.xyzw, cb0[6].xyzw
                dp4 r1.x, r1.xyzw, cb0[7].xyzw
                mov r12.xyz, v[2][0].xyzx
                mov r12.w, l(1.000000)
                dp4 r1.y, r12.xyzw, cb0[0].xyzw
                dp4 r1.z, r12.xyzw, cb0[1].xyzw
                dp4 r1.w, r12.xyzw, cb0[2].xyzw
                dp4 r11.z, r12.xyzw, cb0[4].xyzw
                dp4 r11.w, r12.xyzw, cb0[5].xyzw
                dp4 r13.x, r12.xyzw, cb0[6].xyzw
                dp4 r12.x, r12.xyzw, cb0[7].xyzw
                mov r14.xyz, v[1][0].xyzx
                mov r14.w, l(1.000000)
                dp4 r12.y, r14.xyzw, cb0[0].xyzw
                dp4 r12.z, r14.xyzw, cb0[1].xyzw
                dp4 r12.w, r14.xyzw, cb0[2].xyzw
                dp4 r13.y, r14.xyzw, cb0[4].xyzw
                dp4 r13.z, r14.xyzw, cb0[5].xyzw
                dp4 r13.w, r14.xyzw, cb0[6].xyzw
                dp4 r14.x, r14.xyzw, cb0[7].xyzw
                
                #line 121
                mov r14.y, x0[4].x  // gout<12>
                mov o0.x, r7.z  // triStream<0>
                mov o0.y, r7.w  // triStream<0>
                mov o0.z, r9.x  // triStream<0>
                mov o0.w, r8.x  // triStream<0>
                mov o1.x, r3.w  // triStream<0>
                mov o1.y, r4.w  // triStream<0>
                mov o1.z, r5.w  // triStream<0>
                mov o2.xyz, v[0][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[0][2].xyxx  // triStream<0,0>
                mov o4.x, r14.y  // triStream<0>
                emit_stream m0
                mov r3.w, x0[9].x  // gout<25>
                mov o0.x, r9.y  // triStream<0>
                mov o0.y, r9.z  // triStream<0>
                mov o0.z, r9.w  // triStream<0>
                mov o0.w, r0.x  // triStream<0>
                mov o1.x, r8.y  // triStream<0>
                mov o1.y, r8.z  // triStream<0>
                mov o1.z, r8.w  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r3.w  // triStream<0>
                emit_stream m0
                mov r4.w, x0[14].x  // gout<38>
                mov o0.x, r10.x  // triStream<0>
                mov o0.y, r10.y  // triStream<0>
                mov o0.z, r10.z  // triStream<0>
                mov o0.w, r2.x  // triStream<0>
                mov o1.x, r0.y  // triStream<0>
                mov o1.y, r0.z  // triStream<0>
                mov o1.z, r0.w  // triStream<0>
                mov o2.xyz, r5.xyzx  // triStream<0,0,0>
                mov o3.xy, r7.xyxx  // triStream<0,0>
                mov o4.x, r4.w  // triStream<0>
                emit_stream m0
                mov r0.y, x0[19].x  // gout<51>
                mov o0.x, r10.w  // triStream<0>
                mov o0.y, r11.x  // triStream<0>
                mov o0.z, r11.y  // triStream<0>
                mov o0.w, r1.x  // triStream<0>
                mov o1.x, r2.y  // triStream<0>
                mov o1.y, r2.z  // triStream<0>
                mov o1.z, r2.w  // triStream<0>
                mov o2.xyz, r4.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.zwzz  // triStream<0,0>
                mov o4.x, r0.y  // triStream<0>
                emit_stream m0
                mov r0.z, x0[24].x  // gout<64>
                mov o0.x, r11.z  // triStream<0>
                mov o0.y, r11.w  // triStream<0>
                mov o0.z, r13.x  // triStream<0>
                mov o0.w, r12.x  // triStream<0>
                mov o1.x, r1.y  // triStream<0>
                mov o1.y, r1.z  // triStream<0>
                mov o1.z, r1.w  // triStream<0>
                mov o2.xyz, v[2][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[2][2].xyxx  // triStream<0,0>
                mov o4.x, r0.z  // triStream<0>
                emit_stream m0
                cut_stream m0
                mov o0.x, r9.y  // triStream<0>
                mov o0.y, r9.z  // triStream<0>
                mov o0.z, r9.w  // triStream<0>
                mov o0.w, r0.x  // triStream<0>
                mov o1.x, r8.y  // triStream<0>
                mov o1.y, r8.z  // triStream<0>
                mov o1.z, r8.w  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r3.w  // triStream<0>
                emit_stream m0
                mov r0.x, x0[29].x  // gout<77>
                mov o0.x, r13.y  // triStream<0>
                mov o0.y, r13.z  // triStream<0>
                mov o0.z, r13.w  // triStream<0>
                mov o0.w, r14.x  // triStream<0>
                mov o1.x, r12.y  // triStream<0>
                mov o1.y, r12.z  // triStream<0>
                mov o1.z, r12.w  // triStream<0>
                mov o2.xyz, v[1][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[1][2].xyxx  // triStream<0,0>
                mov o4.x, r0.x  // triStream<0>
                emit_stream m0
                mov o0.x, r10.w  // triStream<0>
                mov o0.y, r11.x  // triStream<0>
                mov o0.z, r11.y  // triStream<0>
                mov o0.w, r1.x  // triStream<0>
                mov o1.x, r2.y  // triStream<0>
                mov o1.y, r2.z  // triStream<0>
                mov o1.z, r2.w  // triStream<0>
                mov o2.xyz, r4.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.zwzz  // triStream<0,0>
                mov o4.x, r0.y  // triStream<0>
                emit_stream m0
                
                #line 77
                ret 
                // Approximately 174 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                // SV_PrimitiveID           0   x           4   PRIMID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 133 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // PS<0: 1f,1: 1f,2: 1f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClip
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_temps 3
                
                #line 64 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r1.xyz, v1.xyzx  // vout<3,4,5>
                mov r2.xy, v2.xyxx  // vout<6,7>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o1.xyz, r1.xyzx  // VS<3,4,5>
                mov o2.xy, r2.xyxx  // VS<6,7>
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  128
                //       float4 Diffuse;                // Offset:  144
                //       float4 Specular;               // Offset:  160
                //       float4 Reflect;                // Offset:  176
                //
                //   } gMaterial;                       // Offset:  128 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           4   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v[3][0].xyz
                dcl_input v[3][1].xyz
                dcl_input v[3][2].xy
                dcl_temps 15
                dcl_indexableTemp x0[30], 4
                dcl_inputprimitive triangle 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 24
                
                #line 80 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                add r0.xyz, v[1][0].xyzx, v[0][0].xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r1.xyz, v[2][0].xyzx, v[1][0].xyzx
                mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r2.xyz, v[0][0].xyzx, v[2][0].xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                
                #line 85
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                dp3 r2.w, r2.xyzx, r2.xyzx
                rsq r2.w, r2.w
                mul r2.xyz, r2.wwww, r2.xyzx
                
                #line 90
                add r3.xyz, v[1][1].xyzx, v[0][1].xyzx
                mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r4.xyz, v[2][1].xyzx, v[1][1].xyzx
                mul r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r5.xyz, v[0][1].xyzx, v[2][1].xyzx
                mul r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r6.xy, v[1][2].xyxx, v[0][2].xyxx
                mul r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r6.zw, v[2][2].xxxy, v[1][2].xxxy
                mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r7.xy, v[0][2].xyxx, v[2][2].xyxx
                mul r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                
                #line 110
                mov r8.xyz, v[0][0].xyzx
                mov r8.w, l(1.000000)
                dp4 r3.w, r8.xyzw, cb0[0].xyzw
                dp4 r4.w, r8.xyzw, cb0[1].xyzw
                dp4 r5.w, r8.xyzw, cb0[2].xyzw
                dp4 r7.z, r8.xyzw, cb0[4].xyzw
                dp4 r7.w, r8.xyzw, cb0[5].xyzw
                dp4 r9.x, r8.xyzw, cb0[6].xyzw
                dp4 r8.x, r8.xyzw, cb0[7].xyzw
                mov r0.w, l(1.000000)
                dp4 r8.y, r0.xyzw, cb0[0].xyzw
                dp4 r8.z, r0.xyzw, cb0[1].xyzw
                dp4 r8.w, r0.xyzw, cb0[2].xyzw
                dp4 r9.y, r0.xyzw, cb0[4].xyzw
                dp4 r9.z, r0.xyzw, cb0[5].xyzw
                dp4 r9.w, r0.xyzw, cb0[6].xyzw
                dp4 r0.x, r0.xyzw, cb0[7].xyzw
                mov r2.w, l(1.000000)
                dp4 r0.y, r2.xyzw, cb0[0].xyzw
                dp4 r0.z, r2.xyzw, cb0[1].xyzw
                dp4 r0.w, r2.xyzw, cb0[2].xyzw
                dp4 r10.x, r2.xyzw, cb0[4].xyzw
                dp4 r10.y, r2.xyzw, cb0[5].xyzw
                dp4 r10.z, r2.xyzw, cb0[6].xyzw
                dp4 r2.x, r2.xyzw, cb0[7].xyzw
                mov r1.w, l(1.000000)
                dp4 r2.y, r1.xyzw, cb0[0].xyzw
                dp4 r2.z, r1.xyzw, cb0[1].xyzw
                dp4 r2.w, r1.xyzw, cb0[2].xyzw
                dp4 r10.w, r1.xyzw, cb0[4].xyzw
                dp4 r11.x, r1.xyzw, cb0[5].xyzw
                dp4 r11.y, r1.xyzw, cb0[6].xyzw
                dp4 r1.x, r1.xyzw, cb0[7].xyzw
                mov r12.xyz, v[2][0].xyzx
                mov r12.w, l(1.000000)
                dp4 r1.y, r12.xyzw, cb0[0].xyzw
                dp4 r1.z, r12.xyzw, cb0[1].xyzw
                dp4 r1.w, r12.xyzw, cb0[2].xyzw
                dp4 r11.z, r12.xyzw, cb0[4].xyzw
                dp4 r11.w, r12.xyzw, cb0[5].xyzw
                dp4 r13.x, r12.xyzw, cb0[6].xyzw
                dp4 r12.x, r12.xyzw, cb0[7].xyzw
                mov r14.xyz, v[1][0].xyzx
                mov r14.w, l(1.000000)
                dp4 r12.y, r14.xyzw, cb0[0].xyzw
                dp4 r12.z, r14.xyzw, cb0[1].xyzw
                dp4 r12.w, r14.xyzw, cb0[2].xyzw
                dp4 r13.y, r14.xyzw, cb0[4].xyzw
                dp4 r13.z, r14.xyzw, cb0[5].xyzw
                dp4 r13.w, r14.xyzw, cb0[6].xyzw
                dp4 r14.x, r14.xyzw, cb0[7].xyzw
                
                #line 121
                mov r14.y, x0[4].x  // gout<12>
                mov o0.x, r7.z  // triStream<0>
                mov o0.y, r7.w  // triStream<0>
                mov o0.z, r9.x  // triStream<0>
                mov o0.w, r8.x  // triStream<0>
                mov o1.x, r3.w  // triStream<0>
                mov o1.y, r4.w  // triStream<0>
                mov o1.z, r5.w  // triStream<0>
                mov o2.xyz, v[0][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[0][2].xyxx  // triStream<0,0>
                mov o4.x, r14.y  // triStream<0>
                emit_stream m0
                mov r3.w, x0[9].x  // gout<25>
                mov o0.x, r9.y  // triStream<0>
                mov o0.y, r9.z  // triStream<0>
                mov o0.z, r9.w  // triStream<0>
                mov o0.w, r0.x  // triStream<0>
                mov o1.x, r8.y  // triStream<0>
                mov o1.y, r8.z  // triStream<0>
                mov o1.z, r8.w  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r3.w  // triStream<0>
                emit_stream m0
                mov r4.w, x0[14].x  // gout<38>
                mov o0.x, r10.x  // triStream<0>
                mov o0.y, r10.y  // triStream<0>
                mov o0.z, r10.z  // triStream<0>
                mov o0.w, r2.x  // triStream<0>
                mov o1.x, r0.y  // triStream<0>
                mov o1.y, r0.z  // triStream<0>
                mov o1.z, r0.w  // triStream<0>
                mov o2.xyz, r5.xyzx  // triStream<0,0,0>
                mov o3.xy, r7.xyxx  // triStream<0,0>
                mov o4.x, r4.w  // triStream<0>
                emit_stream m0
                mov r0.y, x0[19].x  // gout<51>
                mov o0.x, r10.w  // triStream<0>
                mov o0.y, r11.x  // triStream<0>
                mov o0.z, r11.y  // triStream<0>
                mov o0.w, r1.x  // triStream<0>
                mov o1.x, r2.y  // triStream<0>
                mov o1.y, r2.z  // triStream<0>
                mov o1.z, r2.w  // triStream<0>
                mov o2.xyz, r4.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.zwzz  // triStream<0,0>
                mov o4.x, r0.y  // triStream<0>
                emit_stream m0
                mov r0.z, x0[24].x  // gout<64>
                mov o0.x, r11.z  // triStream<0>
                mov o0.y, r11.w  // triStream<0>
                mov o0.z, r13.x  // triStream<0>
                mov o0.w, r12.x  // triStream<0>
                mov o1.x, r1.y  // triStream<0>
                mov o1.y, r1.z  // triStream<0>
                mov o1.z, r1.w  // triStream<0>
                mov o2.xyz, v[2][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[2][2].xyxx  // triStream<0,0>
                mov o4.x, r0.z  // triStream<0>
                emit_stream m0
                cut_stream m0
                mov o0.x, r9.y  // triStream<0>
                mov o0.y, r9.z  // triStream<0>
                mov o0.z, r9.w  // triStream<0>
                mov o0.w, r0.x  // triStream<0>
                mov o1.x, r8.y  // triStream<0>
                mov o1.y, r8.z  // triStream<0>
                mov o1.z, r8.w  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r3.w  // triStream<0>
                emit_stream m0
                mov r0.x, x0[29].x  // gout<77>
                mov o0.x, r13.y  // triStream<0>
                mov o0.y, r13.z  // triStream<0>
                mov o0.z, r13.w  // triStream<0>
                mov o0.w, r14.x  // triStream<0>
                mov o1.x, r12.y  // triStream<0>
                mov o1.y, r12.z  // triStream<0>
                mov o1.z, r12.w  // triStream<0>
                mov o2.xyz, v[1][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[1][2].xyxx  // triStream<0,0>
                mov o4.x, r0.x  // triStream<0>
                emit_stream m0
                mov o0.x, r10.w  // triStream<0>
                mov o0.y, r11.x  // triStream<0>
                mov o0.z, r11.y  // triStream<0>
                mov o0.w, r1.x  // triStream<0>
                mov o1.x, r2.y  // triStream<0>
                mov o1.y, r2.z  // triStream<0>
                mov o1.z, r2.w  // triStream<0>
                mov o2.xyz, r4.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.zwzz  // triStream<0,0>
                mov o4.x, r0.y  // triStream<0>
                emit_stream m0
                
                #line 77
                ret 
                // Approximately 174 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                // SV_PrimitiveID           0   x           4   PRIMID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 133 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // PS<0: 1f,1: 1f,2: 1f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 Light3TexAlphaClipFog
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output o0.xyz
                dcl_output o1.xyz
                dcl_output o2.xy
                dcl_temps 3
                
                #line 64 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                mov r0.xyz, v0.xyzx  // vout<0,1,2>
                mov r1.xyz, v1.xyzx  // vout<3,4,5>
                mov r2.xy, v2.xyxx  // vout<6,7>
                mov o0.xyz, r0.xyzx  // VS<0,1,2>
                mov o1.xyz, r1.xyzx  // VS<3,4,5>
                mov o2.xy, r2.xyxx  // VS<6,7>
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  128
                //       float4 Diffuse;                // Offset:  144
                //       float4 Specular;               // Offset:  160
                //       float4 Reflect;                // Offset:  176
                //
                //   } gMaterial;                       // Offset:  128 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_POSITION           0   xyzw        0      POS  float   xyzw
                // m0:POSITION              0   xyz         1     NONE  float   xyz 
                // m0:NORMAL                0   xyz         2     NONE  float   xyz 
                // m0:TEXCOORD              0   xy          3     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           4   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v[3][0].xyz
                dcl_input v[3][1].xyz
                dcl_input v[3][2].xy
                dcl_temps 15
                dcl_indexableTemp x0[30], 4
                dcl_inputprimitive triangle 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output_sgv o4.x, primitive_id
                dcl_maxout 24
                
                #line 80 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                add r0.xyz, v[1][0].xyzx, v[0][0].xyzx
                mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r1.xyz, v[2][0].xyzx, v[1][0].xyzx
                mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r2.xyz, v[0][0].xyzx, v[2][0].xyzx
                mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                
                #line 85
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                dp3 r2.w, r2.xyzx, r2.xyzx
                rsq r2.w, r2.w
                mul r2.xyz, r2.wwww, r2.xyzx
                
                #line 90
                add r3.xyz, v[1][1].xyzx, v[0][1].xyzx
                mul r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r4.xyz, v[2][1].xyzx, v[1][1].xyzx
                mul r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r5.xyz, v[0][1].xyzx, v[2][1].xyzx
                mul r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
                add r6.xy, v[1][2].xyxx, v[0][2].xyxx
                mul r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r6.zw, v[2][2].xxxy, v[1][2].xxxy
                mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r7.xy, v[0][2].xyxx, v[2][2].xyxx
                mul r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                
                #line 110
                mov r8.xyz, v[0][0].xyzx
                mov r8.w, l(1.000000)
                dp4 r3.w, r8.xyzw, cb0[0].xyzw
                dp4 r4.w, r8.xyzw, cb0[1].xyzw
                dp4 r5.w, r8.xyzw, cb0[2].xyzw
                dp4 r7.z, r8.xyzw, cb0[4].xyzw
                dp4 r7.w, r8.xyzw, cb0[5].xyzw
                dp4 r9.x, r8.xyzw, cb0[6].xyzw
                dp4 r8.x, r8.xyzw, cb0[7].xyzw
                mov r0.w, l(1.000000)
                dp4 r8.y, r0.xyzw, cb0[0].xyzw
                dp4 r8.z, r0.xyzw, cb0[1].xyzw
                dp4 r8.w, r0.xyzw, cb0[2].xyzw
                dp4 r9.y, r0.xyzw, cb0[4].xyzw
                dp4 r9.z, r0.xyzw, cb0[5].xyzw
                dp4 r9.w, r0.xyzw, cb0[6].xyzw
                dp4 r0.x, r0.xyzw, cb0[7].xyzw
                mov r2.w, l(1.000000)
                dp4 r0.y, r2.xyzw, cb0[0].xyzw
                dp4 r0.z, r2.xyzw, cb0[1].xyzw
                dp4 r0.w, r2.xyzw, cb0[2].xyzw
                dp4 r10.x, r2.xyzw, cb0[4].xyzw
                dp4 r10.y, r2.xyzw, cb0[5].xyzw
                dp4 r10.z, r2.xyzw, cb0[6].xyzw
                dp4 r2.x, r2.xyzw, cb0[7].xyzw
                mov r1.w, l(1.000000)
                dp4 r2.y, r1.xyzw, cb0[0].xyzw
                dp4 r2.z, r1.xyzw, cb0[1].xyzw
                dp4 r2.w, r1.xyzw, cb0[2].xyzw
                dp4 r10.w, r1.xyzw, cb0[4].xyzw
                dp4 r11.x, r1.xyzw, cb0[5].xyzw
                dp4 r11.y, r1.xyzw, cb0[6].xyzw
                dp4 r1.x, r1.xyzw, cb0[7].xyzw
                mov r12.xyz, v[2][0].xyzx
                mov r12.w, l(1.000000)
                dp4 r1.y, r12.xyzw, cb0[0].xyzw
                dp4 r1.z, r12.xyzw, cb0[1].xyzw
                dp4 r1.w, r12.xyzw, cb0[2].xyzw
                dp4 r11.z, r12.xyzw, cb0[4].xyzw
                dp4 r11.w, r12.xyzw, cb0[5].xyzw
                dp4 r13.x, r12.xyzw, cb0[6].xyzw
                dp4 r12.x, r12.xyzw, cb0[7].xyzw
                mov r14.xyz, v[1][0].xyzx
                mov r14.w, l(1.000000)
                dp4 r12.y, r14.xyzw, cb0[0].xyzw
                dp4 r12.z, r14.xyzw, cb0[1].xyzw
                dp4 r12.w, r14.xyzw, cb0[2].xyzw
                dp4 r13.y, r14.xyzw, cb0[4].xyzw
                dp4 r13.z, r14.xyzw, cb0[5].xyzw
                dp4 r13.w, r14.xyzw, cb0[6].xyzw
                dp4 r14.x, r14.xyzw, cb0[7].xyzw
                
                #line 121
                mov r14.y, x0[4].x  // gout<12>
                mov o0.x, r7.z  // triStream<0>
                mov o0.y, r7.w  // triStream<0>
                mov o0.z, r9.x  // triStream<0>
                mov o0.w, r8.x  // triStream<0>
                mov o1.x, r3.w  // triStream<0>
                mov o1.y, r4.w  // triStream<0>
                mov o1.z, r5.w  // triStream<0>
                mov o2.xyz, v[0][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[0][2].xyxx  // triStream<0,0>
                mov o4.x, r14.y  // triStream<0>
                emit_stream m0
                mov r3.w, x0[9].x  // gout<25>
                mov o0.x, r9.y  // triStream<0>
                mov o0.y, r9.z  // triStream<0>
                mov o0.z, r9.w  // triStream<0>
                mov o0.w, r0.x  // triStream<0>
                mov o1.x, r8.y  // triStream<0>
                mov o1.y, r8.z  // triStream<0>
                mov o1.z, r8.w  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r3.w  // triStream<0>
                emit_stream m0
                mov r4.w, x0[14].x  // gout<38>
                mov o0.x, r10.x  // triStream<0>
                mov o0.y, r10.y  // triStream<0>
                mov o0.z, r10.z  // triStream<0>
                mov o0.w, r2.x  // triStream<0>
                mov o1.x, r0.y  // triStream<0>
                mov o1.y, r0.z  // triStream<0>
                mov o1.z, r0.w  // triStream<0>
                mov o2.xyz, r5.xyzx  // triStream<0,0,0>
                mov o3.xy, r7.xyxx  // triStream<0,0>
                mov o4.x, r4.w  // triStream<0>
                emit_stream m0
                mov r0.y, x0[19].x  // gout<51>
                mov o0.x, r10.w  // triStream<0>
                mov o0.y, r11.x  // triStream<0>
                mov o0.z, r11.y  // triStream<0>
                mov o0.w, r1.x  // triStream<0>
                mov o1.x, r2.y  // triStream<0>
                mov o1.y, r2.z  // triStream<0>
                mov o1.z, r2.w  // triStream<0>
                mov o2.xyz, r4.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.zwzz  // triStream<0,0>
                mov o4.x, r0.y  // triStream<0>
                emit_stream m0
                mov r0.z, x0[24].x  // gout<64>
                mov o0.x, r11.z  // triStream<0>
                mov o0.y, r11.w  // triStream<0>
                mov o0.z, r13.x  // triStream<0>
                mov o0.w, r12.x  // triStream<0>
                mov o1.x, r1.y  // triStream<0>
                mov o1.y, r1.z  // triStream<0>
                mov o1.z, r1.w  // triStream<0>
                mov o2.xyz, v[2][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[2][2].xyxx  // triStream<0,0>
                mov o4.x, r0.z  // triStream<0>
                emit_stream m0
                cut_stream m0
                mov o0.x, r9.y  // triStream<0>
                mov o0.y, r9.z  // triStream<0>
                mov o0.z, r9.w  // triStream<0>
                mov o0.w, r0.x  // triStream<0>
                mov o1.x, r8.y  // triStream<0>
                mov o1.y, r8.z  // triStream<0>
                mov o1.z, r8.w  // triStream<0>
                mov o2.xyz, r3.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.xyxx  // triStream<0,0>
                mov o4.x, r3.w  // triStream<0>
                emit_stream m0
                mov r0.x, x0[29].x  // gout<77>
                mov o0.x, r13.y  // triStream<0>
                mov o0.y, r13.z  // triStream<0>
                mov o0.z, r13.w  // triStream<0>
                mov o0.w, r14.x  // triStream<0>
                mov o1.x, r12.y  // triStream<0>
                mov o1.y, r12.z  // triStream<0>
                mov o1.z, r12.w  // triStream<0>
                mov o2.xyz, v[1][1].xyzx  // triStream<0,0,0>
                mov o3.xy, v[1][2].xyxx  // triStream<0,0>
                mov o4.x, r0.x  // triStream<0>
                emit_stream m0
                mov o0.x, r10.w  // triStream<0>
                mov o0.y, r11.x  // triStream<0>
                mov o0.z, r11.y  // triStream<0>
                mov o0.w, r1.x  // triStream<0>
                mov o1.x, r2.y  // triStream<0>
                mov o1.y, r2.z  // triStream<0>
                mov o1.z, r2.w  // triStream<0>
                mov o2.xyz, r4.xyzx  // triStream<0,0,0>
                mov o3.xy, r6.zwzz  // triStream<0,0>
                mov o4.x, r0.y  // triStream<0>
                emit_stream m0
                
                #line 77
                ret 
                // Approximately 174 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                // SV_PrimitiveID           0   x           4   PRIMID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 133 "C:\Users\zhaohaoyang\Desktop\d3d11CodeSet\Chapter 11 The Geometry Shader\TreeBillboard\FX\Sphere.fx"
                mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // PS<0: 1f,1: 1f,2: 1f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

